{"version":3,"sources":["utils/utils.ts","constants/apiPaths.ts","store/cartSlice.ts","components/AddProductToCart/AddProductToCart.tsx","components/pages/PageProducts/components/Products.tsx","components/pages/PageProducts/PageProducts.tsx","components/MainLayout/components/Cart.tsx","components/MainLayout/components/Header.tsx","components/MainLayout/MainLayout.tsx","models/Product.ts","components/PaperLayout/PaperLayout.tsx","components/pages/PageProductForm/PageProductForm.tsx","components/CartItems/CartItems.tsx","components/pages/PageCart/components/ReviewCart.tsx","components/pages/PageCart/components/ReviewOrder.tsx","models/Order.ts","components/pages/PageCart/PageCart.tsx","components/pages/PageOrders/components/Orders.tsx","components/pages/PageOrders/PageOrders.tsx","constants/order.tsx","components/pages/PageOrder/PageOrder.tsx","components/pages/admin/PageProductImport/components/ProductsTable.tsx","components/pages/admin/PageProductImport/components/CSVFileImport.tsx","components/pages/admin/PageProductImport/PageProductImport.tsx","components/App/App.tsx","store/counterSlice.ts","store/store.ts","serviceWorker.ts","index.tsx"],"names":["priceFormatter","Intl","NumberFormat","style","currency","formatAsPrice","price","format","API_PATHS","product","order","import","bff","cart","cartSlice","createSlice","name","initialState","items","reducers","updateFromApi","state","payload","addToCart","action","existingItem","find","i","id","count","push","removeFromCart","filter","clearCart","dispatch","getState","a","actions","axios","put","headers","Authorization","localStorage","getItem","selectCartItems","AddProductToCart","useDispatch","cartItem","useSelector","IconButton","onClick","color","Typography","align","useStyles","makeStyles","theme","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","footer","backgroundColor","palette","background","paper","padding","spacing","Products","classes","useState","products","setProducts","useEffect","productList","Grid","container","map","index","item","xs","sm","md","Card","className","CardMedia","image","title","CardContent","gutterBottom","variant","component","CardActions","content","PageProducts","Cart","get","then","data","badgeContent","length","undefined","Link","to","Badge","createStyles","root","menuButton","marginRight","homeLink","textDecoration","Header","React","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","Toolbar","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Copyright","href","Date","getFullYear","paddingBottom","MainLayout","children","Container","maxWidth","ProductSchema","Yup","shape","required","description","layout","width","marginLeft","breakpoints","up","marginTop","marginBottom","PaperLayout","Paper","Form","props","dirty","isSubmitting","isValid","handleSubmit","onSubmit","autoComplete","TextField","label","fullWidth","multiline","justify","Button","type","disabled","emptyValues","cast","PageProductForm","history","useHistory","useParams","setProduct","isLoading","setIsLoading","res","initialValues","validationSchema","values","formattedValues","productToSave","listItem","total","fontWeight","CartItems","isEditable","totalPrice","reduce","List","disablePadding","ListItem","ListItemText","primary","secondary","ReviewCart","cartItems","Fragment","ReviewOrder","address","firstName","lastName","direction","comment","AddressSchema","default","defined","OrderItemSchema","productId","integer","positive","OrderSchema","of","status","stepper","buttons","justifyContent","button","steps","initialAddressValues","CartIsEmpty","Success","PageCart","activeStep","setActiveStep","isCartEmpty","setAddress","isFormValid","setIsFormValid","Stepper","Step","StepLabel","enableReinitialize","isInitialValid","Orders","orders","setOrders","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","statusHistory","toUpperCase","size","delete","PageOrders","ORDER_STATUS","ORDER_STATUS_FLOW","helperText","select","value","PageOrder","setOrder","setCartItems","promises","Promise","all","p","lastStatusItem","statusHistoryItem","timestamp","toString","ProductsTable","CSVFileImport","url","file","setFile","uploadFile","e","method","params","encodeURIComponent","response","console","log","fetch","body","result","onChange","files","target","dataTransfer","PageProductImport","Box","alignItems","App","path","exact","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","cartReducer","window","location","hostname","match","interceptors","use","error","alert","reject","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.41ce4305.chunk.js","sourcesContent":["const priceFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n\nexport const formatAsPrice = (price: number) => priceFormatter.format(price);","\nconst API_PATHS = {\n  product: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n  order: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n  import: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n  bff: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n  cart: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n};\n\nexport default API_PATHS;\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {RootState} from 'store/store';\nimport {Product} from \"models/Product\";\nimport {CartItem} from \"models/CartItem\";\nimport API_PATHS from \"../constants/apiPaths\";\nimport axios from 'axios';\n\ninterface CartState {\n  items: CartItem[]\n}\n\nconst initialState: CartState = {\n  items: [],\n};\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    updateFromApi: (state, { payload: { items } }: PayloadAction<CartState>) => {\n      return {\n        items: [\n            ...items,\n        ],\n      }\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    addToCart: (state, action: PayloadAction<Product>) => {\n      const {items} = state;\n      const {payload: product} = action;\n      const existingItem = items.find(i => i.product.id === product.id);\n      if (existingItem) {\n        existingItem.count++;\n        return;\n      }\n      items.push({product, count: 1});\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    removeFromCart: (state, action: PayloadAction<Product>) => {\n      let {items} = state;\n      const {payload: product} = action;\n      const existingItem = items.find(i => i.product.id === product.id);\n      if (!existingItem) return;\n      if (existingItem.count > 1) {\n        existingItem.count--;\n        return;\n      }\n      state.items = items.filter(i => i.product.id !== product.id);\n    },\n    clearCart: (state) => {\n      state.items = [];\n    }\n  },\n});\n\nexport const addToCart = (product: Product) => async (dispatch: any, getState: any) => {\n  dispatch(cartSlice.actions.addToCart(product));\n  const { cart: { items } } = getState();\n  await axios.put(`${API_PATHS.cart}/profile/cart`, { items }, {\n    headers: {\n      Authorization: `Basic ${localStorage.getItem('authorization_token')}`,\n    },\n  })\n};\n\nexport const removeFromCart = (product: Product) => async (dispatch: any, getState: any) => {\n  dispatch(cartSlice.actions.removeFromCart(product));\n  const { cart: { items } } = getState();\n  await axios.put(`${API_PATHS.cart}/profile/cart`, { items }, {\n    headers: {\n      Authorization: `Basic ${localStorage.getItem('authorization_token')}`,\n    },\n  })\n};\n\nexport const clearCart = () => async (dispatch: any, getState: any) => {\n  dispatch(cartSlice.actions.clearCart());\n  const { cart: { items } } = getState();\n  await axios.put(`${API_PATHS.cart}/profile/cart`, { items }, {\n    headers: {\n      Authorization: `Basic ${localStorage.getItem('authorization_token')}`,\n    },\n  })\n};\n\nexport const {updateFromApi} = cartSlice.actions;\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.cart.value)`\nexport const selectCartItems = (state: RootState) => state.cart.items;\n\nexport default cartSlice.reducer;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {Product} from \"models/Product\";\nimport CartIcon from \"@material-ui/icons/ShoppingCart\";\nimport Add from \"@material-ui/icons/Add\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addToCart, selectCartItems, removeFromCart} from \"store/cartSlice\";\n\ntype AddProductToCartProps = {\n  product: Product\n};\n\nexport default function AddProductToCart({product}: AddProductToCartProps) {\n  const dispatch = useDispatch();\n  const cartItems = useSelector(selectCartItems);\n  const cartItem = cartItems.find(i => i.product.id === product.id);\n\n  return (\n    <>\n    {\n      cartItem ?\n        (\n          <>\n            <IconButton onClick={() => dispatch(removeFromCart(product))}>\n              <Remove color={\"secondary\"}/>\n            </IconButton>\n            <Typography align=\"center\">\n              {cartItem.count}\n            </Typography>\n            <IconButton onClick={() => dispatch(addToCart(product))}>\n              <Add color={\"secondary\"}/>\n            </IconButton>\n            </>\n        )\n        :\n        (\n          <IconButton onClick={() => dispatch(addToCart(product))}>\n            <CartIcon color={\"secondary\"}/>\n          </IconButton>\n        )\n    }\n    </>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Product} from \"models/Product\";\nimport {formatAsPrice} from \"utils/utils\";\nimport AddProductToCart from \"components/AddProductToCart/AddProductToCart\";\n// import axios from 'axios';\n// import API_PATHS from \"constants/apiPaths\";\nimport productList from \"./productList.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default function Products() {\n  const classes = useStyles();\n  const [products, setProducts] = useState<Product[]>([]);\n\n  useEffect(() => {\n    // axios.get(`${API_PATHS.bff}/product/available/`)\n    //   .then(res => setProducts(res.data));\n    setProducts(productList);\n  }, [])\n\n  return (\n    <Grid container spacing={4}>\n      {products.map((product: Product, index: number) => (\n        <Grid item key={product.id} xs={12} sm={6} md={4}>\n          <Card className={classes.card}>\n            <CardMedia\n              className={classes.cardMedia}\n              image={`https://source.unsplash.com/random?sig=${index}`}\n              title=\"Image title\"\n            />\n            <CardContent className={classes.cardContent}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {product.title}\n              </Typography>\n              <Typography>\n                {formatAsPrice(product.price)}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <AddProductToCart product={product}/>\n            </CardActions>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Products from \"components/pages/PageProducts/components/Products\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(3, 0, 3),\n  },\n}));\n\nexport default function PageProducts() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.content}>\n      <Products/>\n    </div>\n  );\n}\n","import Badge from \"@material-ui/core/Badge\";\nimport CartIcon from \"@material-ui/icons/ShoppingCart\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport React, { useEffect } from \"react\";\nimport axios from 'axios';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCartItems, updateFromApi } from \"store/cartSlice\";\nimport { Link } from 'react-router-dom';\nimport API_PATHS from \"../../../constants/apiPaths\";\n\nexport default function Cart() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.get(\n        `${API_PATHS.cart}/profile/cart`,\n        {\n          headers: {\n            Authorization: `Basic ${localStorage.getItem('authorization_token')}`\n          }\n        }\n    ).then(({ data: { data: { cart } } }) => {\n      dispatch(updateFromApi(cart))\n    });\n  }, [dispatch]);\n  const cartItems = useSelector(selectCartItems);\n  const badgeContent = cartItems.length || undefined;\n\n  return (\n    <IconButton\n      aria-label=\"show 4 new mails\"\n      color=\"inherit\"\n      component={Link}\n      to=\"/cart\"\n    >\n      <Badge badgeContent={badgeContent} color=\"secondary\">\n        <CartIcon/>\n      </Badge>\n    </IconButton>\n  );\n}\n","import React from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Cart from \"components/MainLayout/components/Cart\";\nimport {Link} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    homeLink: {\n      color: 'white',\n      textDecoration: 'none'\n    }\n  }),\n);\n\nexport default function Header() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const auth = true;\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <AppBar position=\"relative\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          <Link className={classes.homeLink} to=\"/\">My Store!</Link>\n        </Typography>\n\n        {auth && (\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle/>\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <MenuItem component={Link} to=\"/admin/orders\" onClick={handleClose}>Manage orders</MenuItem>\n              <MenuItem component={Link} to=\"/admin/products\" onClick={handleClose}>Manage products</MenuItem>\n            </Menu>\n          </div>\n        )}\n        <Cart/>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Container from \"@material-ui/core/Container\";\nimport Header from \"components/MainLayout/components/Header\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        My Store\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingBottom: theme.spacing(8),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst MainLayout: React.FC = ({children}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Header/>\n      <main>\n        <Container className={classes.container} maxWidth=\"md\">\n          {children!}\n        </Container>\n      </main>\n      <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Thank you for your purchase!\n        </Typography>\n        <Copyright/>\n      </footer>\n    </>\n  );\n};\n\nexport default MainLayout;","import * as Yup from 'yup';\n\nexport type Product = {\n  id: string,\n  title: string,\n  description: string,\n  price: number,\n};\n\nexport const ProductSchema = Yup.object().shape({\n  title: Yup.string().required(),\n  description: Yup.string(),\n  price: Yup.number().required(),\n});\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n}));\n\nconst PaperLayout:React.FC = ({children}) =>  {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.layout}>\n      <Paper className={classes.paper}>\n        {children}\n      </Paper>\n    </div>\n  );\n};\n\nexport default PaperLayout;","import React, {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {Product, ProductSchema} from \"models/Product\";\nimport {Formik, Field, FormikProps, FormikValues} from 'formik';\nimport {TextField} from 'formik-material-ui';\nimport axios from 'axios';\nimport {useHistory, useParams} from 'react-router-dom';\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API_PATHS from \"constants/apiPaths\";\n\nconst Form = (props: FormikProps<FormikValues>) => {\n  const {\n    // values,\n    // touched,\n    // errors,\n    dirty,\n    isSubmitting,\n    isValid,\n    // handleChange,\n    // handleBlur,\n    handleSubmit,\n    // handleReset,\n    // setFieldValue,\n    // isEditMode,\n    // onCancel,\n    // isButtonContact,\n    // setTouched,\n    // isButtonAddAndRedirect,\n    // setShouldRedirect,\n    // submitForm,\n    // onGetCitizen,\n    // shouldConfirmLeave,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            autoComplete=\"off\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"description\"\n            label=\"Description\"\n            fullWidth\n            autoComplete=\"off\"\n            multiline\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Field\n            component={TextField}\n            name=\"price\"\n            label=\"Price ($)\"\n            fullWidth\n            autoComplete=\"off\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Field\n            component={TextField}\n            name=\"count\"\n            label=\"Count\"\n            fullWidth\n            autoComplete=\"off\"\n            required\n          />\n        </Grid>\n        <Grid item container xs={12} justify=\"space-between\">\n          <Button\n            color=\"primary\"\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!dirty || isSubmitting || !isValid}\n          >\n            Save Product\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nconst emptyValues: any = ProductSchema.cast();\n\nexport default function PageProductForm() {\n  const history = useHistory();\n  const {id} = useParams<{ id: string }>();\n  const [product, setProduct] = useState<Product | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const onSubmit = (values: FormikValues) => {\n    const formattedValues = ProductSchema.cast(values);\n    const productToSave = id ? {...ProductSchema.cast(formattedValues), id} : formattedValues;\n    axios.put(`${API_PATHS.bff}/product`, productToSave)\n      .then(() => history.push('/admin/products'));\n  };\n\n  useEffect(() => {\n    if (!id) {\n      setIsLoading(false);\n      return;\n    }\n    axios.get(`${API_PATHS.bff}/product/${id}`)\n      .then(res => {\n        setProduct(res.data);\n        setIsLoading(false);\n      });\n  }, [id])\n\n  if (isLoading) return <p>loading...</p>;\n\n  return (\n    <PaperLayout>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        {id ? 'Edit product' : 'Create new product'}\n      </Typography>\n      <Formik\n        initialValues={product || emptyValues}\n        validationSchema={ProductSchema}\n        onSubmit={onSubmit}\n      >\n        {(props: FormikProps<FormikValues>) => <Form {...props} />}\n      </Formik>\n    </PaperLayout>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {CartItem} from \"models/CartItem\";\nimport {formatAsPrice} from \"utils/utils\";\nimport AddProductToCart from \"components/AddProductToCart/AddProductToCart\";\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ntype CartItemsProps = {\n  items: CartItem[],\n  isEditable: boolean\n};\n\nexport default function CartItems({items, isEditable}: CartItemsProps) {\n  const classes = useStyles();\n\n  const totalPrice: number = items.reduce((total, item) => (item.count * item.product.price + total), 0);\n\n  return (\n    <>\n      <List disablePadding>\n        {items.map((cartItem: CartItem) => (\n          <ListItem className={classes.listItem} key={cartItem.product.id}>\n            {isEditable && <AddProductToCart product={cartItem.product}/>}\n            <ListItemText primary={cartItem.product.title} secondary={cartItem.product.description}/>\n            <Typography\n              variant=\"body2\">{formatAsPrice(cartItem.product.price)} x {cartItem.count} = {formatAsPrice(cartItem.product.price * cartItem.count)}</Typography>\n          </ListItem>\n        ))}\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Shipping\"/>\n          <Typography\n            variant=\"body2\">Free</Typography>\n        </ListItem>\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Total\"/>\n          <Typography variant=\"subtitle1\" className={classes.total}>\n            {formatAsPrice(totalPrice)}\n          </Typography>\n        </ListItem>\n      </List>\n    </>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CartItems from \"components/CartItems/CartItems\";\nimport {useSelector} from \"react-redux\";\nimport {selectCartItems} from \"store/cartSlice\";\n\nexport default function ReviewCart() {\n  const cartItems = useSelector(selectCartItems);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <CartItems items={cartItems} isEditable/>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CartItems from \"components/CartItems/CartItems\";\nimport {FormikValues} from \"formik\";\nimport {CartItem} from \"models/CartItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ntype ReviewOrderProps = {\n  address: FormikValues,\n  items: CartItem[]\n};\n\nexport default function ReviewOrder({address, items}:ReviewOrderProps) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <CartItems items={items} isEditable={false}/>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Shipping\n          </Typography>\n          <Typography gutterBottom>{address.firstName} {address.lastName}</Typography>\n          <Typography gutterBottom>{address.address}</Typography>\n        </Grid>\n        <Grid item container direction=\"column\" xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Comment\n          </Typography>\n          <Typography gutterBottom>{address.comment}</Typography>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import * as Yup from 'yup';\n\nexport const AddressSchema = Yup.object({\n  firstName: Yup.string().required(),\n  lastName: Yup.string().required(),\n  address: Yup.string().required(),\n  comment: Yup.string().default(''),\n}).defined();\n\nexport type Address = Yup.InferType<typeof AddressSchema>;\n\n\nexport const OrderItemSchema = Yup.object({\n  productId: Yup.string().required(),\n  count: Yup.number().integer().positive().required()\n}).defined();\n\nexport type OrderItem = Yup.InferType<typeof OrderItemSchema>;\n\n\nexport const OrderSchema = Yup.object({\n  id: Yup.string().required(),\n  items: Yup.array().of(OrderItemSchema),\n  address: AddressSchema,\n  status: Yup.string().required(),\n}).defined();\n\nexport type Order = Yup.InferType<typeof OrderSchema>;\n","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ReviewCart from 'components/pages/PageCart/components/ReviewCart';\nimport ReviewOrder from 'components/pages/PageCart/components/ReviewOrder';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectCartItems, clearCart} from \"store/cartSlice\";\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport {Formik, Form, FormikProps, FormikValues, FastField} from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {TextField} from 'formik-material-ui';\nimport axios from \"axios\";\nimport API_PATHS from \"constants/apiPaths\";\nimport {AddressSchema, OrderSchema} from \"models/Order\";\n\nconst useStyles = makeStyles((theme) => ({\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst steps = ['Review your cart', 'Shipping address', 'Review your order'];\n\nconst initialAddressValues: any = AddressSchema.cast();\n\nconst CartIsEmpty = () => (\n  <Typography variant=\"h6\" gutterBottom>\n    The cart is empty. Didn't you like anything in our shop?\n  </Typography>\n);\n\nconst Success = () => (\n  <React.Fragment>\n    <Typography variant=\"h5\" gutterBottom>\n      Thank you for your order.\n    </Typography>\n    <Typography variant=\"subtitle1\">\n      Your order is placed. Our manager will call you soon to clarify the details.\n    </Typography>\n  </React.Fragment>\n);\n\nconst renderForm = () => (\n  <>\n    <Typography variant=\"h6\" gutterBottom>\n      Shipping address\n    </Typography>\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={6}>\n        <FastField\n          component={TextField}\n          name=\"lastName\"\n          label=\"Last Name\"\n          fullWidth\n          autoComplete=\"off\"\n          required\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <FastField\n          component={TextField}\n          name=\"firstName\"\n          label=\"First Name\"\n          fullWidth\n          autoComplete=\"off\"\n          required\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FastField\n          component={TextField}\n          name=\"address\"\n          label=\"Shipping address\"\n          fullWidth\n          autoComplete=\"off\"\n          multiline\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FastField\n          component={TextField}\n          name=\"comment\"\n          label=\"Comment\"\n          fullWidth\n          autoComplete=\"off\"\n          multiline\n        />\n      </Grid>\n    </Grid>\n  </>\n);\n\nexport default function PageCart() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState<number>(0);\n  const cartItems = useSelector(selectCartItems);\n  const isCartEmpty = !cartItems.length;\n  const [address, setAddress] = useState<FormikValues>(initialAddressValues);\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n    if (activeStep === 2) {\n      const formattedValues = OrderSchema.cast({\n        items: cartItems.map(i => ({productId: i.product.id, count: i.count})),\n        address\n      });\n      axios.put(`${API_PATHS.order}/order`, formattedValues)\n        .then(() => {\n          dispatch(clearCart());\n          setActiveStep(activeStep + 1);\n        });\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <PaperLayout>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Checkout\n      </Typography>\n      <Stepper activeStep={activeStep} className={classes.stepper}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <React.Fragment>\n        <Formik\n          enableReinitialize={false}\n          initialValues={initialAddressValues}\n          validationSchema={AddressSchema}\n          isInitialValid={false}\n          onSubmit={() => undefined}\n        >\n          {(props: FormikProps<FormikValues>) => {\n            const {values, isValid} = props;\n            setAddress(values);\n            setIsFormValid(isValid);\n            return (\n              <Form>\n                {isCartEmpty && activeStep === 0 && <CartIsEmpty/>}\n                {activeStep === 0 && !isCartEmpty && <ReviewCart/>}\n                {activeStep === 1 && renderForm()}\n                {activeStep === 2 && <ReviewOrder address={address} items={cartItems}/>}\n                {activeStep === 3 && <Success/>}\n              </Form>\n            )\n          }}\n        </Formik>\n\n        {activeStep <= 2 && <div className={classes.buttons}>\n          {activeStep !== 0 && (\n            <Button onClick={handleBack} className={classes.button}>\n              Back\n            </Button>\n          )}\n          {!isCartEmpty && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleNext}\n              className={classes.button}\n              disabled={activeStep === 1 && !isFormValid}\n            >\n              {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n            </Button>)}\n        </div>}\n      </React.Fragment>\n    </PaperLayout>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport API_PATHS from \"constants/apiPaths\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from \"@material-ui/core/Button\";\n\nexport default function Orders() {\n  const [orders, setOrders] = useState<any>([]);\n\n  useEffect(() => {\n    axios.get(`${API_PATHS.order}/order`)\n      .then(res => setOrders(res.data));\n  }, []);\n\n  const onDelete = (id: string) => {\n    axios.delete(`${API_PATHS.order}/order/${id}`)\n      .then(() => {\n        axios.get(`${API_PATHS.order}/order`)\n          .then(res => setOrders(res.data));\n        }\n      );\n  };\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>From</TableCell>\n            <TableCell align=\"right\">Items count</TableCell>\n            <TableCell align=\"right\">Address</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.map((order: any) => (\n            <TableRow key={order.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {order.address?.firstName} {order.address?.lastName}\n              </TableCell>\n              <TableCell align=\"right\">{order.items.length}</TableCell>\n              <TableCell align=\"right\">{order.address?.address}</TableCell>\n              <TableCell align=\"right\">{order.statusHistory[order.statusHistory.length-1].status.toUpperCase()}</TableCell>\n              <TableCell align=\"right\">\n                <Button size=\"small\" color=\"primary\" component={Link} to={`/admin/order/${order.id}`}>\n                  Manage\n                </Button>\n                <Button size=\"small\" color=\"secondary\" onClick={() => onDelete(order.id)}>\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Orders from \"components/pages/PageOrders/components/Orders\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(3, 0, 3),\n  },\n}));\n\nexport default function PageOrders() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.content}>\n      <Typography variant=\"h6\" gutterBottom>\n        Manage orders\n      </Typography>\n      <Orders/>\n    </div>\n  );\n}\n","export const ORDER_STATUS = {\n  open: 'open',\n  approved: 'approved',\n  confirmed: 'confirmed',\n  sent: 'sent',\n  completed: 'completed',\n  cancelled: 'cancelled',\n};\n\nexport const ORDER_STATUS_FLOW = [\n  ORDER_STATUS.open,\n  ORDER_STATUS.approved,\n  ORDER_STATUS.confirmed,\n  ORDER_STATUS.sent,\n  ORDER_STATUS.completed,\n  ORDER_STATUS.cancelled,\n];\n","import React, {useEffect, useState} from 'react';\nimport {OrderItem} from \"models/Order\";\nimport axios from 'axios';\nimport {useParams} from 'react-router-dom';\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API_PATHS from \"constants/apiPaths\";\nimport {CartItem} from \"models/CartItem\";\nimport {Product} from \"models/Product\";\nimport ReviewOrder from \"components/pages/PageCart/components/ReviewOrder\";\nimport {ORDER_STATUS, ORDER_STATUS_FLOW} from \"constants/order\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Field, Formik, FormikProps, FormikValues} from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {TextField} from \"formik-material-ui\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\n\nconst Form = (props: FormikProps<FormikValues>) => {\n  const {\n    values,\n    // touched,\n    // errors,\n    dirty,\n    isSubmitting,\n    isValid,\n    // handleChange,\n    // handleBlur,\n    handleSubmit,\n    // handleReset,\n    // setFieldValue,\n    // isEditMode,\n    // onCancel,\n    // isButtonContact,\n    // setTouched,\n    // isButtonAddAndRedirect,\n    // setShouldRedirect,\n    // submitForm,\n    // onGetCitizen,\n    // shouldConfirmLeave,\n  } = props;\n  let helperText = '';\n  if ((values.status) === ORDER_STATUS.approved) {\n    helperText = 'Setting status to APPROVED will decrease products count from stock!!!';\n  }\n  // TODO add check if status was changed from approved to cancelled\n  //  to increase product count back again\n  // if ((values.status) === ORDER_STATUS.cancelled) {\n  //   helperText = 'Setting status to CANCELLED will increase products count in stock!!!';\n  // }\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"status\"\n            label=\"Status\"\n            select\n            fullWidth\n            helperText={helperText}\n          >\n            {ORDER_STATUS_FLOW.map((status,index) => (\n              <MenuItem key={index} value={status}>\n                {status}\n              </MenuItem>\n            ))}\n          </Field>\n        </Grid>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"comment\"\n            label=\"Comment\"\n            fullWidth\n            autoComplete=\"off\"\n            multiline\n          />\n        </Grid>\n        <Grid item container xs={12} justify=\"space-between\">\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!dirty || isSubmitting || !isValid}\n          >\n            Change status\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default function PageOrder() {\n  const {id} = useParams<{ id: string }>();\n  const [order, setOrder] = useState<any>({});\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const onChangeStatus = (values: FormikValues) => {\n    return axios.put(`${API_PATHS.order}/order/${order.id}/status`, values)\n      .then(({data}) => setOrder(data));\n  };\n\n  useEffect(() => {\n    if (!id) {\n      setIsLoading(false);\n      return;\n    }\n    const promises: any[] = [\n      axios.get(`${API_PATHS.product}/product`),\n      axios.get(`${API_PATHS.order}/order/${id}`)\n    ];\n    Promise.all(promises)\n      .then(([{data: products}, {data: order}]) => {\n        const cartItems: CartItem[] = order.items.map((i: OrderItem) => ({\n          product: products.find((p: Product) => p.id === i.productId),\n          count: i.count\n        }));\n        setOrder(order);\n        setCartItems(cartItems);\n        setIsLoading(false);\n      });\n  }, [id])\n\n  if (isLoading) return <p>loading...</p>;\n\n  const statusHistory = order.statusHistory || [];\n\n  const lastStatusItem = statusHistory[statusHistory.length - 1];\n\n  return (\n    <PaperLayout>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Manage order\n      </Typography>\n      <ReviewOrder address={order.address} items={cartItems}/>\n      <Typography variant=\"h6\">\n        Status:\n      </Typography>\n      <Typography variant=\"h6\" color=\"primary\">\n        {lastStatusItem?.status.toUpperCase()}\n      </Typography>\n      <Typography variant=\"h6\">\n        Change status:\n      </Typography>\n      <Formik\n        initialValues={{status: lastStatusItem.status, comment: ''}}\n        enableReinitialize\n        onSubmit={onChangeStatus}\n      >\n        {(props: FormikProps<FormikValues>) => <Form {...props} />}\n      </Formik>\n      <Typography variant=\"h6\">\n        Status history:\n      </Typography>\n      <TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Status</TableCell>\n              <TableCell align=\"right\">Date and Time</TableCell>\n              <TableCell align=\"right\">Comment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {statusHistory.map((statusHistoryItem: any) => (\n              <TableRow key={order.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {statusHistoryItem.status.toUpperCase()}\n                </TableCell>\n                <TableCell align=\"right\">{(new Date(statusHistoryItem.timestamp)).toString()}</TableCell>\n                <TableCell align=\"right\">{statusHistoryItem.comment}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </PaperLayout>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport API_PATHS from \"constants/apiPaths\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from \"@material-ui/core/Button\";\nimport {formatAsPrice} from \"utils/utils\";\n\nexport default function ProductsTable() {\n  const [products, setProducts] = useState<any>([]);\n\n  useEffect(() => {\n    axios.get(`${API_PATHS.bff}/product`)\n      .then(res => setProducts(res.data));\n  }, []);\n\n  const onDelete = (id: string) => {\n    axios.delete(`${API_PATHS.bff}/product/${id}`)\n      .then(() => {\n        axios.get(`${API_PATHS.bff}/product`)\n          .then(res => setProducts(res.data));\n        }\n      );\n  };\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Title</TableCell>\n            <TableCell align=\"right\">Description</TableCell>\n            <TableCell align=\"right\">Price</TableCell>\n            <TableCell align=\"right\">Count</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {products.map((product: any) => (\n            <TableRow key={product.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {product.title}\n              </TableCell>\n              <TableCell align=\"right\">{product.description}</TableCell>\n              <TableCell align=\"right\">{formatAsPrice(product.price)}</TableCell>\n              <TableCell align=\"right\">{product.count}</TableCell>\n              <TableCell align=\"right\">\n                <Button size=\"small\" color=\"primary\" component={Link} to={`/admin/product-form/${product.id}`}>\n                  Manage\n                </Button>\n                <Button size=\"small\" color=\"secondary\" onClick={() => onDelete(product.id)}>\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(3, 0, 3),\n  },\n}));\n\ntype CSVFileImportProps = {\n  url: string,\n  title: string\n};\n\nexport default function CSVFileImport({url, title}: CSVFileImportProps) {\n  const classes = useStyles();\n  const [file, setFile] = useState<any>();\n\n  const onFileChange = (e: any) => {\n    console.log(e);\n    let files = e.target.files || e.dataTransfer.files\n    if (!files.length) return\n    setFile(files.item(0));\n  };\n\n  const removeFile = () => {\n    setFile('');\n  };\n\n  const uploadFile = async (e: any) => {\n      // Get the presigned URL\n      const response = await axios({\n        method: 'GET',\n        url,\n        params: {\n          name: encodeURIComponent(file.name)\n        }\n      })\n      console.log('File to upload: ', file.name)\n      console.log('Uploading to: ', response.data)\n      const result = await fetch(response.data, {\n        method: 'PUT',\n        body: file\n      })\n      console.log('Result: ', result)\n      setFile('');\n    }\n  ;\n\n  return (\n    <div className={classes.content}>\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      {!file ? (\n          <input type=\"file\" onChange={onFileChange}/>\n      ) : (\n        <div>\n          <button onClick={removeFile}>Remove file</button>\n          <button onClick={uploadFile}>Upload file</button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport API_PATHS from \"constants/apiPaths\";\nimport ProductsTable from \"components/pages/admin/PageProductImport/components/ProductsTable\";\nimport CSVFileImport from \"components/pages/admin/PageProductImport/components/CSVFileImport\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(3, 0, 3),\n  },\n}));\n\nexport default function PageProductImport() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.content}>\n      <Box display=\"flex\" alignItems=\"center\">\n        <CSVFileImport url={`${API_PATHS.import}/import`} title=\"Import Products CSV\"/>\n        <Button size=\"small\" color=\"primary\" variant=\"contained\" component={Link} to={'/admin/product-form/'}>\n          create product\n        </Button>\n      </Box>\n      <ProductsTable/>\n    </div>\n  );\n}\n","import React from 'react';\nimport 'components/App/App.css';\nimport PageProducts from \"components/pages/PageProducts/PageProducts\";\nimport MainLayout from \"components/MainLayout/MainLayout\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport PageProductForm from \"components/pages/PageProductForm/PageProductForm\";\nimport PageCart from \"components/pages/PageCart/PageCart\";\nimport PageOrders from \"components/pages/PageOrders/PageOrders\";\nimport PageOrder from \"components/pages/PageOrder/PageOrder\";\nimport PageProductImport from \"components/pages/admin/PageProductImport/PageProductImport\";\n\nfunction App() {\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <MainLayout>\n            <Route exact path=\"/\">\n              <PageProducts/>\n            </Route>\n            <Route exact path={[\"/admin/product-form/:id\", '/admin/product-form']}>\n              <PageProductForm/>\n            </Route>\n            <Route exact path=\"/cart\">\n              <PageCart />\n            </Route>\n            <Route exact path=\"/admin/orders\">\n              <PageOrders />\n            </Route>\n            <Route exact path=\"/admin/order/:id\">\n              <PageOrder />\n            </Route>\n            <Route exact path=\"/admin/products\">\n              <PageProductImport />\n            </Route>\n          </MainLayout>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from 'store/store';\n\ninterface CounterState {\n  value: number;\n}\n\nconst initialState: CounterState = {\n  value: 0,\n};\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from 'store/counterSlice';\nimport cartReducer from 'store/cartSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    cart: cartReducer\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'components/App/App';\nimport {store} from 'store/store';\nimport {Provider} from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport axios from 'axios';\n\naxios.interceptors.response.use(\n  response => {\n    return response;\n  },\n  function(error) {\n    if (error?.response?.status === 400) {\n      alert(error.response.data?.data);\n    }\n\n    return Promise.reject(error?.response ?? error);\n  }\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CssBaseline/>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}